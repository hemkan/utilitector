plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.utilitector'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M2")
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.7'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	
	implementation(
			"org.apache.spark:spark-core_2.12:3.5.3",
			"org.apache.spark:spark-sql_2.12:3.5.3",
			"org.apache.spark:spark-mllib_2.12:3.5.3"
	)
	
	implementation 'org.mongodb.spark:mongo-spark-connector_2.13:10.4.0'
	
	runtimeOnly 'javax.servlet:javax.servlet-api:4.0.1'
	
	runtimeOnly("org.antlr:antlr4-runtime") {
		version {
			strictly '4.9.3'
		}
	}
	
}



configurations {
	compileClasspath {
		resolutionStrategy.force group: 'org.antlr', name: 'antlr4-runtime', version: '4.9.3'
	}
	runtimeClasspath {
		resolutionStrategy.force group: 'org.antlr', name: 'antlr4-runtime', version: '4.9.3'
	}
	configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
